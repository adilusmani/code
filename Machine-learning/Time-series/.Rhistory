b
a
colnames(a)
colnames(b)
b = read.table(file.choose(),sep=",",header = TRUE)
a = read.table(file.choose(),sep=",",header = TRUE)
colnames(a)
colnames(b)
colnames(a)=c("student","id")
colnames(a)
t = merge(a,b,by="id",x = TRUE)
library(plyr)
install.pacakges(plyr)
install.packges(plyr)
install.packages(plyr)
install.packages('plyr')
library('plyr')
t = join(a,b,type="left")
View(t)
write.csv(t,"lab2.csv")
View(a)
View(b)
a = read.table(file.choose(),sep=",",header = TRUE)
colnames(a)
t = join(a,b,type="left")
View(t)
b = read.table(file.choose(),sep=",",header = TRUE)
View(b)
b = read.table(file.choose(),sep=",",header = TRUE)
colnames(b)
b = read.table(file.choose(),sep=",",header = TRUE)
b = read.table(file.choose(),header = TRUE)
b = read.csv(file.choose(),header = TRUE)
colnames(b)
t = join(a,b,type="left")
View(t)
View(a)
View(b)
b = read.csv(file.choose(),header = TRUE)
t = join(a,b,type="left")
View(t)
write.csv(t,"lab-2.csv")
x = [1:20]
x = 1:20
x
plot(x)
x + cos(x)
x = x + cos(x)
plot(x)
sum(x)/len(x)
sum(x)/length(x)
plot(x*10.53)
plot(1:20*10.53)
x = 1:30
x = x+sin(x)
plot(x)
sum(x)
sum(x)/length(x)
plot(1:30*15.50)
plot(x)
sum(x)/30
plot(1:30*15.50)+1)
plot((1:30*15.50)+1)
plot((1:30*15.50)+3)
setwd("~/code/Time-series")
train = read.table(file.choose(),sep=" ")
View(train)
train = read.table(file.choose(),sep=" ",header=TRUE)
train = read.table(file.choose(),sep=" ",header=TRUE)
install.packages("ggplot2")
library(ggplot2)
ggplot()+geom_point(data = train,aes(x=1:ncol(train)))
ggplot()+geom_point(data = train,aes(x=1:ncol(train),y=train$Precipitacion))
ggplot(data = train,aes(x=1:ncol(train),y=train$Precipitacion))+geom_point()
ggplot(data = train,x=1:ncol(train),y=train$Precipitacion)+geom_point()
ggplot(data = train)+geom_point(x=1:ncol(train),y=train$Precipitacion)
ggplot(data = train)+geom_point(x=1:ncol(train),y=Precipitacion)
p = ggplot(data=train,aes(1:nrow(train),Precipitacion))
p+geom_point()
p+geom_line()
p = ggplot(data=train,aes(1:nrow(train),train$X22.Temperature_Exterior_Sensor))
p+geom_line()
x = 1:nrow(train)
y = train$X22.Temperature_Exterior_Sensor
xy = x*y
lm(x ~ y)
y_hat = 423.73+57.21*y
p+geom_line()+geom_line(aes(x,y_hat)
)
y_hat = 423.73+57.21*x
p+geom_line()+geom_line(aes(x,y_hat)
)
p+geom_line()
lm (y ~ x)
y_hat = 14.8824+0.001356*x
p+geom_line()+geom_line(aes(x,y_hat)
)
x = data.frame(x,x**2)
lm (y ~ x)
x = data.frame(x,x**2,y)
lm (y ~ x)
head(x)
lm (y ~ .)
x = 1:nrow(x)
plot(y)
p+geom_line()+geom_line(aes(x,y_hat)
)
p+geom_line()+geom_line(aes(x,y_hat,col="red"))
test = read.table(file.choose(),sep=" ",header=TRUE)
x = 1:nrow(test)
y = train$X22.Temperature_Exterior_Sensor
lm(x ~ y)
y = test$X22.Temperature_Exterior_Sensor
lm(x ~ y)
y
y=test$Temperature_Exterior_Sensor
lm(x ~ y)
ggplot(data = test)
p1 = ggplot(data = test)
p1 = ggplot(data = test,aes(x,y))
p1+geom_line()
View(test)
p+geom_line()
p1+geom_line()
lm(y ~ x)
plot(y)
plot(y[1:10])
plot(y[1:20])
plot(y[1:100])
mfpar()
par(mfrow=c(2,2))
plot(y[1:100])
plot(y)
plot(y[1:300])
plot(y[1:110])
plot(y[1:120])
plot(y[1:130])
plot(y[1:125])
plot(y[1:121])
plot(y[1:122])
plot(y[120:122])
plot(y[122:122+121])
plot(y[122:243])
View(x)
View(y)
plot9x,y
plot(x,y)
plot(x,y)
ggplot(x,y)
ggplot(aes(x,y))
lm(y ~ x)
y_hat = 22.673 + x*(-0.003079)
plot(y_hat)
test_data = data.frame(x = x, y = y)
ggplot(test_data,aes(x,y))
plot_test = ggplot(test_data,aes(x,y))
plot_test + geom_point()
plot_test + geom_point() + geom_abline()
plot_test + geom_point() + geom_smooth()
plot_test + geom_point() + geom_smooth(method = lm)
nrow(test_data)
1373/14
levels(test$Date)
count(test$Date)
table(test$Date)
temp = test_data$x[1:96]
plot_temp = ggplot(temp,aes(x,y))
temp = data.frame(x = test_data$x[1:96], y = test_data$y[1:96])
plot_temp = ggplot(temp,aes(x,y))
plot_temp + geom_point() + geom_smooth(method = lm)
96+96
temp = data.frame(x = test_data$x[97:192], y = test_data$y[97:192])
plot_temp = ggplot(temp,aes(x,y))
plot_temp + geom_point() + geom_smooth(method = lm)
plot_test = ggplot(test_data,aes(x,y))
plot_test + geom_point() + geom_smooth(method = lm)
help("geom_point")
plot_temp + geom_line() + geom_smooth(method = lm)
plot_test = ggplot(test_data,aes(x,y))
plot_test + geom_point() + geom_smooth(method = lm)
plot_test = ggplot(test_data,aes(x,y))
plot_test + geom_line() + geom_smooth(method = lm)
sum(y)
data.frame(y,y/sum(y))
sum(y)/length(y)
data.frame(y,y-20.56)
data.frame(y,y/20.56)
plot(data.frame(y,y/20.56))
t = data.frame(x = 1:length(y), y = y, y_hat  = y/20.56)
plot(y)
average_temperature = sum(y)/length(y)
average_temperature
t = data.frame(x = 1:length(y), y = y, season_factor  = y/average_temperature)
help(split)
split(y,14)
split(test_data,14)
split(test_data,2)
split(test_data,1:14)
split(test_data,1:2)
help("aggregate")
aggregate(y)
aggregate(y,mean())
aggregate(y,FUN = mean())
aggregate(data.frame(x,y),FUN = mean())
aggregate(test$Weather_Temperature, by = list(test$Date),FUN="mean")
sumarize_test = aggregate(test$Weather_Temperature, by = list(test$Date),FUN="mean")
plot(sumarize_test$x)
sumarize_test = data.frame(x = 1:nrow(sumarize_test), sumarize_test)
sumarize_test = aggregate(test$Weather_Temperature, by = list(test$Date),FUN="mean")
sumarize_test = data.frame(x = 1:nrow(sumarize_test), y = sumarize_test$x, date = sumarize_test$Group.1)
plot_sumarize + geom_line()
plot_sumarize = ggplot(sumarize_test,aes(x,y))
plot_sumarize + geom_line()
par(mfrow = c(1,1))
plot_sumarize + geom_line()
plot_test = ggplot(test_data,aes(x,y))
plot_sumarize + geom_line()
par(mfrow = c(2,2))
plot_sumarize + geom_line()
par(mfrow = c(2,2))
plot_sumarize + geom_line()
par(mfrow = c(2,2))
plohelp(par)
help(par)
par(mfcol = c(2,2))
plot_sumarize + geom_line()
plot_sumarize + geom_line()
plot_sumarize = ggplot(sumarize_test,aes(x,y))
plot_sumarize + geom_line()
plot_temp + geom_line() + geom_smooth(method = lm)
plot_test = ggplot(test_data,aes(x,y))
plot_sumarize + geom_line()
plot_temp = ggplot(temp,aes(x,y))
plot_temp + geom_line() + geom_smooth(method = lm)
plot_test = ggplot(test_data,aes(x,y))
plot_test + geom_line() + geom_smooth(method = lm)
plot_sumarize + geom_line()
help(aes)
plot_sumarize + geom_line(binwdth = 1)
plot_sumarize + geom_line() + scale_size(breaks = 0.4)
plot_sumarize + geom_line() + scale_x_continuous(breaks=1)
plot_sumarize + geom_line() + scale_x_continuous(breaks=1:5)
plot_sumarize + geom_line() + scale_x_continuous(breaks=1,1)
plot_sumarize + geom_line() + scale_x_continuous(breaks=1,2)
sqe(1,2,by=0.5)
seq(1,2,by=0.5)
seq(1,3,by=0.5)
plot_sumarize + geom_line() + scale_x_continuous(breaks=seq(1,nrow(sumarize_test),by=1))
with(plot_sumarize,lm(y ~ x))
with(sumarize_test,lm(y ~ x))
plot_test + geom_line() + geom_smooth(method = lm)
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,nrow(sumarize_test),by=96))
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,nrow(plot_test),by=96))
seq(1,nrow(plot_test),by=96)
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,nrow(test_data),by=96))
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,nrow(test_data),by=96)/96)
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(1,nrow(test_data),by=96)/96))
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,nrow(test_data),by=96))
t = seq(1,nrow(test_data),by=96)
apply(t,t-96)
t
2[2:]
t[2:]
t[1:]
t[:1]
t[:]
t
t[1]
t[2]
t[2][:]
t[2][1:]
t[2][:1]
t[2:4]
t[2:length(t)]
t[2:length(t)] - t-96**seq(1,length(t),by=1)
193-96
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,15,by=1))
/96)
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(1,nrow(test_data),by=96)),labels = (seq(1,15),by=1)))
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(1,nrow(test_data),by=96)),labels = (seq(1,15,by=1)))
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(1,nrow(test_data),by=96)),labels = (seq(0,15,by=1)))
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(0,nrow(test_data),by=96)),labels = (seq(0,15,by=1)))
source('~/.active-rstudio-document')
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(1,nrow(test_data),by=96)),labels = (seq(1,15,by=1)))
table(test$Date)
sumarize_test
help(sort)
install.packages('dplyr')
library(dplyr)
date(sumarize_test$date)
as.Date(sumarize_test$date)
sort(as.Date(sumarize_test$date))
order(as.Date(sumarize_test$date))
order((sumarize_test$date))
order(as.Date(sumarize_test$date,format = "%d-%m-%Y"))
order(as.Date(sumarize_test$date,format = "%d/%m/%Y"))
sumarize_test = sumarize_test[order(as.Date(sumarize_test$date,format = "%d/%m/%Y"))]
sumarize_test = aggregate(test$Weather_Temperature, by = list(test$Date),FUN="mean")
sumarize_test = sumarize_test[order(as.Date(sumarize_test$date,format = "%d/%m/%Y"))]
sumarize_test = data.frame(x = 1:nrow(sumarize_test), y = sumarize_test$x, date = sumarize_test$Group.1)
sumarize_test = sumarize_test[order(as.Date(sumarize_test$date,format = "%d/%m/%Y"))]
sumarize_test = sumarize_test[order(as.Date(sumarize_test$date,format = "%d/%m/%Y")),]
sumarize_test
plot_sumarize = ggplot(sumarize_test,aes(x,y))
plot_sumarize + geom_line() + scale_x_continuous(breaks=seq(1,nrow(sumarize_test),by=1))
sumarize_test
sumarize_test = aggregate(test$Weather_Temperature, by = list(test$Date),FUN="mean")
sumarize_test = data.frame(y = sumarize_test$x, date = sumarize_test$Group.1)
sumarize_test = sumarize_test[order(as.Date(sumarize_test$date,format = "%d/%m/%Y")),]
sumarize_test = data.frame(x,sumarize_test)
sumarize_test = data.frame(x = 1:nrow(sumarize_test),sumarize_test)
plot_sumarize = ggplot(sumarize_test,aes(x,y))
plot_sumarize + geom_line() + scale_x_continuous(breaks=seq(1,nrow(sumarize_test),by=1))
View(sumarize_test)
sf = sum(sumarize_test$y)/length(sumarize_test$y)
sumarize_test = data.frame(sumarize_test,seasonality_factor = sumarize_test$y/sf)
sum(sumarize_test$y)
sum(sumarize_test$y)/length(sumarize_test$y)
sumarize_test$y>17.23183
length(sumarize_test$y>17.23183)
lm(sumarize_test$y ~ sumarize_test$x)
train = lm(sumarize_test$y ~ sumarize_test$x)
predict(train,seq(16,25,by=1))
predict.lm(train,seq(16,25,by=1))
predict.lm(train,data.frame(x = seq(16,25,by=1)))
plot(predict.lm(train,data.frame(x = seq(16,25,by=1))))
plot(predict.lm(train,data.frame(x=1))
)
train.lm = lm(sumarize_test$y ~ sumarize_test$x)
predict(train.lm,1)
predict(train.lm,data.frame(x=1:20))
train.lm
equation = lm(sumarize_test$y ~ sumarize_test$x)
equation = lm(sumarize_test$y ~ sumarize_test$x)
tq  = data.frame(y=c(1,2,3))
predict(equation,tq)
tq
predict(equation,newdata = tq)
tq  = data.frame(y=1:40)
predict(equation,tq)
tq  = data.frame(y=16:20)
predict(equation,tq)
predict(equation,tq$y)
predict(equation,data.frame(tq$y))
tq  = data.frame(x=16:20)
predict(equation,tq)
tq  = data.frame(x=seq(16,20,by=1))
tq
predict(equation,tq)
equation$model
equation = lm(y = sumarize_test$y ~ x = sumarize_test$x)
equation = lm(y ~ x,data=sumarize_test)
tq  = data.frame(x=seq(16,20,by=1))
predict(equation,tq)
x = c(1,2,3)
y = c(4,5,6)
tq  = data.frame(x=seq(16,30,by=1))
next_15_day = predict(equation,tq)
exp_temp_next_15 = sum(nexr_15_day)/length(next_15_day)
exp_temp_next_15 = sum(next_15_day)/length(next_15_day)
forecast = sf*exp_temp_next_15
30_days = data.frame(x=1:30,y=c(sumarize_test$y,forecast))
days_39 = data.frame(x=1:30,y=c(sumarize_test$y,forecast))
y=c(sumarize_test$y,forecast)
length(y)
forecast
sum(next_15_day)
length(next_15_day)
forecast = sumarize_test$seasonality_factor*exp_temp_next_15
exp_temp_next_15
sf = sum(sumarize_test$y)/length(sumarize_test$y)
sf
exp_temp_next_15 = sum(next_15_day)/length(next_15_day)
forecast = sumarize_test$seasonality_factor*exp_temp_next_15
days_39 = data.frame(x=1:30,y=c(sumarize_test$y,forecast))
days_30 = data.frame(x=1:30,y=c(sumarize_test$y,forecast))
plot_30 = ggplot(days_30,aes(x,y))
plot_30 + geom_line() + geom_smooth(method = lm)
plot_30 + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1))
test = read.table("NEW-DATA-2.T15.txt",sep=" ",header=TRUE)
test_data = data.frame(x = 1:nrow(test),y = test$Weather_Temperature)
plot_test = ggplot(test_data,aes(x,y))
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(1,nrow(test_data),by=96)),labels = (seq(1,15,by=1)))
table(test$Date)
temp = data.frame(x = test_data$x[97:192], y = test_data$y[97:192])
plot_temp = ggplot(temp,aes(x,y))
plot_temp + geom_line() + geom_smooth(method = lm)
average_temperature = sum(y)/length(y)
t = data.frame(x = 1:length(y), y = y, season_factor  = y/average_temperature)
sumarize_test = aggregate(test$Weather_Temperature, by = list(test$Date),FUN="mean")
sumarize_test = data.frame(y = sumarize_test$x, date = sumarize_test$Group.1)
sumarize_test = sumarize_test[order(as.Date(sumarize_test$date,format = "%d/%m/%Y")),]
sumarize_test = data.frame(x = 1:nrow(sumarize_test),sumarize_test)
plot_sumarize = ggplot(sumarize_test,aes(x,y))
plot_sumarize + geom_line() + scale_x_continuous(breaks=seq(1,nrow(sumarize_test),by=1))
sf = sum(sumarize_test$y)/length(sumarize_test$y)
sumarize_test = data.frame(sumarize_test,seasonality_factor = sumarize_test$y/sf)
equation = lm(y ~ x,data=sumarize_test)
tq  = data.frame(x=seq(16,30,by=1))
next_15_day = predict(equation,tq)
exp_temp_next_15 = sum(next_15_day)/length(next_15_day)
forecast = sumarize_test$seasonality_factor*exp_temp_next_15
days_30 = data.frame(x=1:30,y=c(sumarize_test$y,forecast))
plot_30 = ggplot(days_30,aes(x,y))
plot_30 + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1))
table(sumarize_test$date)
test = read.table("NEW-DATA-1.T15.txt",sep=" ",header=TRUE)
test_data = data.frame(x = 1:nrow(test),y = test$Weather_Temperature)
plot_test = ggplot(test_data,aes(x,y))
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(1,nrow(test_data),by=96)),labels = (seq(1,15,by=1)))
source('~/code/Time-series/predict_18april_2may.R')
seq(1,1)
rep(1,2)
days_30 = data.frame(x=1:30,y=c(sumarize_test$y,forecast),z = c(rep(1,15),rep(2,15)))
days_30 = data.frame(x=1:30,y=c(sumarize_test$y,forecast),z = as.factor(c(rep(1,15),rep(2,15))))
plot_30 = ggplot(days_30,aes(x,y,z))
plot_30 + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1))
plot_30 + geom_line(colour=z) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1))
plot_30 + geom_line(colour=days_30$z) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1))
train = read.table("NEW-DATA-1.T15.txt",sep=" ",header=TRUE)
table(train$Date)
plot_test = ggplot(test_data,aes(x,y)) + labs(x = "Days")
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(1,nrow(test_data),by=96)),labels = (seq(1,15,by=1)))
plot_test = ggplot(test_data,aes(x,y)) + labs(x = "Days",y = "Temperature")
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(1,nrow(test_data),by=96)),labels = (seq(1,15,by=1)))
plot_test = ggplot(test_data,aes(x,y)) + labs(x = "Days",y = "Average Temperature", Main="Average Temperature for a Day")
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(1,nrow(test_data),by=96)),labels = (seq(1,15,by=1)))
plot_test = ggplot(test_data,aes(x,y)) + labs(x = "Days",y = "Average Temperature", Titile="Average Temperature for a Day")
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(1,nrow(test_data),by=96)),labels = (seq(1,15,by=1)))
source('~/code/Time-series/predict_18april_2may.R')
source('~/code/Time-series/predict_18april_2may.R')
plot_test = ggplot(test_data,aes(x,y)) + labs(x = "Days",y = "Temperature", Titile="Average Temperature for 15 mins for Days")
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(1,nrow(test_data),by=96)),labels = (seq(1,15,by=1)))
plot_test = ggplot(test_data,aes(x,y)) + labs(x = "Days",y = "Temperature", title="Average Temperature for 15 mins for Days")
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(1,nrow(test_data),by=96)),labels = (seq(1,15,by=1)))
plot_temp = ggplot(temp,aes(x,y))
plot_temp + geom_line() + geom_smooth(method = lm)
plot_sumarize = ggplot(sumarize_test,aes(x,y)) + labs(x = "Days",y = "Temperature", title="Average Temperature for a Day")
plot_sumarize + geom_line() + scale_x_continuous(breaks=seq(1,nrow(sumarize_test),by=1))
plot_30 = ggplot(days_30,aes(x,y,z)) + labs(x = "Days",y = "Temperature", title="Average Temperature for a Day")
plot_30 + geom_line(colour=days_30$z) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1))
plot_30 + geom_line(colour=days_30$z) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1))+scale_fill_discrete(breaks=c("trt1","ctrl","trt2"))
plot_30 + geom_line(colour=days_30$z) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1))+ guides(fill = guide_legend(reverse=TRUE)) + scale_fill_discrete(breaks=c("trt1","ctrl","trt2"))
plot_30 + geom_line(colour=days_30$z) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1))+ guides(fill = guide_legend(reverse=TRUE)) + scale_fill_discrete(breaks=c("trt1","ctrl"))
plot_30 + geom_line(colour=days_30$z) + geom_smooth(method = lm) + theme(legend.title=element_blank())
plot_30 + geom_line(colour=days_30$z) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1))+ theme(legend.title=element_blank())
next_15_day
equation
exp_temp_next_15
plot_test = ggplot(test_data,aes(x,y)) + labs(x = "Days",y = "Temperature", title="Average Temperature for 15 mins for Days")
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(1,nrow(test_data),by=96)),labels = (seq(1,15,by=1)))
plot_test = ggplot(test_data,aes(x,y)) + labs(x = "Days",y = "Temperature", title="Average Temperature for 15 mins for 15 Days")
plot_test = ggplot(test_data,aes(x,y)) + labs(x = "Days",y = "Temperature", title="Average Temperature for 15 mins for 15 Days")
plot_test + geom_line() + geom_smooth(method = lm) + scale_x_continuous(breaks=(seq(1,nrow(test_data),by=96)),labels = (seq(1,15,by=1)))
table(test$Date)
average_temperature = sum(y)/length(y)
t = data.frame(x = 1:length(y), y = y, season_factor  = y/average_temperature)
sumarize_test = aggregate(test$Weather_Temperature, by = list(test$Date),FUN="mean")
sumarize_test = data.frame(y = sumarize_test$x, date = sumarize_test$Group.1)
sumarize_test = sumarize_test[order(as.Date(sumarize_test$date,format = "%d/%m/%Y")),]
sumarize_test = data.frame(x = 1:nrow(sumarize_test),sumarize_test)
plot_sumarize = ggplot(sumarize_test,aes(x,y)) + labs(x = "Days",y = "Temperature", title="Average Temperature for a Day for 15 days")
plot_sumarize + geom_line() + scale_x_continuous(breaks=seq(1,nrow(sumarize_test),by=1))
plot_30 = ggplot(days_30,aes(x,y,z)) + labs(x = "Days",y = "Temperature", title="Average Temperature for 15 predicted days")
plot_30 + geom_line(colour=days_30$z) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1))+ theme(legend.title=element_blank())
plot_30 + geom_line(colour=days_30$z, group = days_30$z) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1))
plot_30 + geom_line(colour=days_30$z, group = days_30$z) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + guide_legend()
test = read.table("NEW-DATA-2.T15.txt",sep=" ",header=TRUE)
plot_30 + geom_line(colour=days_30$z) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1),guide="legend")
plot_30 + geom_line(colour=days_30$z) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + scale_fill_continuous(guide = "legend")
plot_30 + geom_line(colour=days_30$z) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) guides(fill = guide_legend(keywidth = 3, keyheight = 1))
plot_30 + geom_line(colour=days_30$z) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + guides(fill = guide_legend(keywidth = 3, keyheight = 1))
days_30 = data.frame(x=1:30,y=c(sumarize_test$y,forecast),z = as.factor(c(rep(1,15),rep(2,15))))
plot_30 = ggplot(days_30,aes(x,y,z)) + labs(x = "Days",y = "Temperature", title="Average Temperature for 15 predicted days")
plot_30 + geom_line(colour=days_30$z) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + guides(fill = guide_legend(keywidth = 3, keyheight = 1))
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + guides(fill = guide_legend(keywidth = 3, keyheight = 1))
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + guides(title="Temperature value")
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + guides(fill = guide_legend(title = "Temperature", title.position = "left"))
plot_30 = ggplot(days_30,aes(x,y,z)) + labs(x = "Days",y = "Temperature", title="Average Temperature for 15 predicted days")
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + guides(fill = guide_legend(title = "Temperature", title.position = "left"))
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + guides(title = "Temperature", title.position = "left")
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + guides(title = "Temperature", title.position = "right")
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + guide_legend(title="Legend")
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + guides(guide = guide_legend(title="Legend"))
plot_30 + geom_line(aes(colour=days_30$z,guides = guide_legend(title="Legend"))) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1))
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1))
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + guides(fill = guide_legend(keywidth = 3, keyheight = 1)
)
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1))
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + theme(legend.position="right")
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + theme(legend.position="left")
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + theme(legend.position="left",legend.title="Legend")
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + theme(legend.position="left",legend.title=element_text("Legend"))
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) +  scale_colour_brewer(name = "My Legend")
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) +  scale_colour_brewer(name = "My Legend") + theme(panel.background = element_rect(fill = "black"))
help("scale_color_manual")
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) +  scale_colour_manual(values=c("red","blue"),name = "My Legend")
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + scale_colour_manual(values=c("red","blue"),name = "Legend")
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + scale_colour_manual(values=c("red","blue"),name = "Legend", labels = c("Given","Predicted"))
plot_30 + geom_line(aes(colour=days_30$z)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + scale_colour_manual(values=c("#999999", "#E69F00"),name = "Legend", labels = c("Given","Predicted"))
help("geom_line")
plot_30 + geom_line(aes(colour=days_30$z,linetype = 1)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + scale_colour_manual(values=c("#999999", "#E69F00"),name = "Legend", labels = c("Given","Predicted"))
help(aes)
plot_30 + geom_line(aes(colour=days_30$z,linetype = 2)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + scale_colour_manual(values=c("#999999", "#E69F00"),name = "Legend", labels = c("Given","Predicted"))
plot_30 + geom_line(aes(colour=days_30$z),linetype = 2)) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + scale_colour_manual(values=c("#999999", "#E69F00"),name = "Legend", labels = c("Given","Predicted"))
plot_30 + geom_line(aes(colour=days_30$z),linetype = 2) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + scale_colour_manual(values=c("#999999", "#E69F00"),name = "Legend", labels = c("Given","Predicted"))
plot_30 + geom_line(aes(colour=days_30$z),linetype = 4) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + scale_colour_manual(values=c("#999999", "#E69F00"),name = "Legend", labels = c("Given","Predicted"))
plot_30 + geom_line(aes(colour=days_30$z),linetype = 10) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + scale_colour_manual(values=c("#999999", "#E69F00"),name = "Legend", labels = c("Given","Predicted"))
plot_30 + geom_line(aes(colour=days_30$z),linetype = 0.1) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + scale_colour_manual(values=c("#999999", "#E69F00"),name = "Legend", labels = c("Given","Predicted"))
plot_30 + geom_line(aes(colour=days_30$z),linetype = 0.8) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + scale_colour_manual(values=c("#999999", "#E69F00"),name = "Legend", labels = c("Given","Predicted"))
plot_30 + geom_line(aes(colour=days_30$z),linetype = 1.5) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + scale_colour_manual(values=c("#999999", "#E69F00"),name = "Legend", labels = c("Given","Predicted"))
plot_30 + geom_line(aes(colour=days_30$z),size = 1.5) + geom_smooth(method = lm) + scale_x_continuous(breaks=seq(1,30,by=1)) + scale_colour_manual(values=c("#999999", "#E69F00"),name = "Legend", labels = c("Given","Predicted"))
